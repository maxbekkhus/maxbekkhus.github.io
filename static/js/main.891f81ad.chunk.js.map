{"version":3,"sources":["style/GlobalStyle.ts","components/Drawer/DrawerLink/styled.ts","components/Drawer/DrawerLink/DrawerLink.tsx","components/Drawer/styled.ts","components/Drawer/Drawer.tsx","components/Main/styled.ts","components/Main/Main.tsx","components/PageContainer/styled.ts","components/PageContainer/PageContainer.tsx","components/App.tsx","reportWebVitals.js","index.tsx"],"names":["GlobalStyle","createGlobalStyle","SDrawerLink","styled","div","isActive","SDrawerLinkIcon","SDrawerLinkLabel","label","DrawerLink","children","iconSrc","onClick","src","alt","SDrawer","motion","SDrawerTopSection","SDrawerBrandContainer","SDrawerBrandLogo","SDrawerLinkContainer","SDrawerBottomContainer","SDrawerUserLinkContainer","SDrawerUserContainer","SDrawerUserLogo","SDrawerUserLabels","SDrawerUserName","SDrawerUserMail","drawerVariants","open","width","closed","userLinksVariants","height","links","text","passiveIconSrc","Drawer","useState","isOpen","setIsOpen","userIsOpen","setUserIsOpen","activeLinkIndex","setActiveLinkIndex","animate","variants","transition","type","ease","duration","initial","map","link","index","SMain","main","Main","SPageContainer","PageContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.891f81ad.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: Helvetica;\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n`\n\nexport default GlobalStyle","import styled from \"styled-components\";\n\ntype SDrawerLinkProps = {\n  isActive: boolean;\n}\n\nexport const SDrawerLink = styled.div<SDrawerLinkProps>`\n  display: flex;\n  align-items: center;\n  background-color: ${({isActive = false}) => isActive ? \"#EFEFEF\" : \"#FDFDFD\"};\n  cursor: pointer;\n  border-radius: 8px;\n\n  transition: background-color 300ms;\n`\n\nexport const SDrawerLinkIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  min-width: 40px;\n  height: 40px;\n  margin-right: 16px;\n  cursor: pointer;\n\n  > img {\n     width: 20px;\n     height: 20px;\n  }\n`\ntype SDrawerLinkLabelProps = {\n  isActive: boolean;\n}\nexport const SDrawerLinkLabel = styled.label<SDrawerLinkLabelProps>`\n  font-weight: 600;\n  color: ${({ isActive = false }) => isActive ? \"#2B2F33\" : \"#8F8F8F\"};\n  cursor: pointer;\n  white-space: nowrap;\n\n  transition: color 300ms;\n`","import React, { FC } from \"react\"\nimport { SDrawerLink, SDrawerLinkIcon, SDrawerLinkLabel } from \"./styled\"\n\nconst DrawerLink: FC<any> = ({ children, iconSrc, isActive, onClick }) => (\n  <SDrawerLink \n    isActive={isActive}\n    onClick={onClick}\n  >\n    <SDrawerLinkIcon>\n      <img src={iconSrc} alt=\"icon\"/>\n    </SDrawerLinkIcon>\n    <SDrawerLinkLabel isActive={isActive}>\n      {children}\n    </SDrawerLinkLabel>\n  </SDrawerLink>\n)\n\nexport default DrawerLink","import { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\n\nexport const SDrawer = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n  background-color: #FDFDFD;\n  box-shadow:\n      0 1px 1px hsl(0deg 0% 0% / 0.075),\n      0 2px 2px hsl(0deg 0% 0% / 0.075),\n      0 4px 4px hsl(0deg 0% 0% / 0.075),\n      0 8px 8px hsl(0deg 0% 0% / 0.075),\n      0 16px 16px hsl(0deg 0% 0% / 0.075)\n    ;\n  overflow: hidden;\n  z-index: 1;\n`\nexport const SDrawerTopSection = styled.div`\n\n`\n\nexport const SDrawerBrandContainer = styled.div`\n  width: 100%;\n  padding: 16px;\n`\n\nexport const SDrawerBrandLogo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 12px;\n  background-color: #86D5A9;\n  cursor: pointer;\n\n  > div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: #FDFDFD;\n\n    > div {\n      width: 6px;\n      height: 6px;\n      border-radius: 50%;\n      background-color: #4ABF7F;\n    }\n  }\n`\n\nexport const SDrawerLinkContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n\n  div + div {\n    margin-top: 16px;\n  }\n`\n\nexport const SDrawerBottomContainer = styled.div`\n  margin: 0 16px;\n`\n\nexport const SDrawerUserLinkContainer = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-top: 2px solid #E0E0E0;\n  overflow: hidden;\n\n  > div {\n    margin-top: 16px;\n    background-color: transparent;\n  }\n\n  div:last-child {\n    margin-bottom: 16px;\n  }\n`\n\nexport const SDrawerUserContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 16px 0;\n  cursor: pointer;\n`\n\nexport const SDrawerUserLogo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  min-width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #FFC299;\n  margin-right: 16px;\n  color: #E05A00;\n  font-weight: 800;\n  cursor: pointer;\n`\n\nexport const SDrawerUserLabels = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const SDrawerUserName = styled.label`\n  font-weight: 800;\n  color: \"#2B2F33\";\n  white-space: nowrap;\n  color: #2B2F33;\n  cursor: pointer;\n`\n\nexport const SDrawerUserMail = styled.label`\n  font-weight: 800;\n  font-size: 12px;\n  color: \"#2B2F33\";\n  white-space: nowrap;\n  color: #8F8F8F;\n  cursor: pointer;\n`","import { Variants } from \"framer-motion\"\nimport React, { useState } from \"react\"\nimport DrawerLink from \"./DrawerLink/DrawerLink\"\nimport { \n  SDrawer, \n  SDrawerBottomContainer, \n  SDrawerBrandContainer, \n  SDrawerBrandLogo, \n  SDrawerLinkContainer, \n  SDrawerTopSection, \n  SDrawerUserContainer,  \n  SDrawerUserLabels,\n  SDrawerUserLinkContainer, \n  SDrawerUserLogo, \n  SDrawerUserMail, \n  SDrawerUserName \n} from \"./styled\"\n\nconst drawerVariants: Variants = {\n  open: {\n    width: \"300px\",\n  },\n  closed: {\n    width: \"72px\"\n  }\n}\n\nconst userLinksVariants: Variants = {\n  open: {\n    height: \"auto\"\n  },\n  closed: {\n    height: \"0\"\n  }\n}\n\nconst links = [\n  {\n    text: \"Dashboard\",\n    iconSrc: '/dashboard.svg',\n    passiveIconSrc: '/dashboardDisabled.svg'\n  },\n  {\n    text: \"Settings\",\n    iconSrc: '/settings.svg',\n    passiveIconSrc: '/settingsDisabled.svg'\n  }\n]\n\nconst Drawer = () => {\n  const [isOpen, setIsOpen] = useState(true);\n  const [userIsOpen, setUserIsOpen] = useState(false);\n  const [activeLinkIndex, setActiveLinkIndex] = useState(0);\n\n  const renderLinks = () => {\n    return links.map((link, index) => (\n      <DrawerLink\n        key={link.text}\n        iconSrc={index === activeLinkIndex ? link.iconSrc : link.passiveIconSrc} \n        isActive={index === activeLinkIndex}\n        onClick={() => setActiveLinkIndex(index)}\n      >\n        {link.text}\n      </DrawerLink>\n    ))\n  }\n\n  return (\n    <SDrawer \n      animate={isOpen ? \"open\" : \"closed\"}\n      variants={drawerVariants}\n      transition={{\n        type: \"tween\",\n        ease: \"easeInOut\",\n        duration: 0.2\n      }}\n      initial={false}\n    >\n      <SDrawerTopSection>\n        <SDrawerBrandContainer>\n          <SDrawerBrandLogo onClick={() => setIsOpen(!isOpen)}>\n            <div>\n              <div/>\n            </div>\n          </SDrawerBrandLogo>\n        </SDrawerBrandContainer>\n        <SDrawerLinkContainer>\n          {renderLinks()}\n        </SDrawerLinkContainer>\n      </SDrawerTopSection>\n      <SDrawerBottomContainer>\n        <SDrawerUserLinkContainer\n          animate={userIsOpen ? \"open\" : \"closed\"}\n          variants={userLinksVariants}\n          transition={{\n            type: \"tween\",\n            ease: \"easeInOut\",\n            duration: 0.2\n          }}\n          initial={false}\n        >\n          <DrawerLink\n            iconSrc=\"/logout.svg\"\n            isActive\n          >\n            Sign Out\n          </DrawerLink>\n          <DrawerLink\n            iconSrc=\"/settings.svg\"\n            isActive\n          >\n            Profile\n          </DrawerLink>\n        </SDrawerUserLinkContainer>\n        <SDrawerUserContainer\n          onClick={() => setUserIsOpen(!userIsOpen)}\n        >\n          <SDrawerUserLogo>\n            JD\n          </SDrawerUserLogo>\n          <SDrawerUserLabels>\n            <SDrawerUserName>\n              John Doe\n            </SDrawerUserName>\n            <SDrawerUserMail>\n              john@doe.com\n            </SDrawerUserMail>\n          </SDrawerUserLabels>\n        </SDrawerUserContainer>\n      </SDrawerBottomContainer>\n    </SDrawer>\n  )\n}\n\nexport default Drawer","import styled from \"styled-components\"\n\nexport const SMain = styled.main`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  background-color: #F5F5F5;\n`","import React, { FC, ReactNode } from \"react\"\nimport { SMain } from \"./styled\"\n\ntype MainProps = {\n  children: ReactNode\n}\n\nconst Main: FC<MainProps> = ({ children }) => (\n  <SMain>\n    {children}\n  </SMain>\n)\n\nexport default Main","import styled from \"styled-components\";\n\nexport const SPageContainer = styled.div`\n  flex: 1;\n`","import React from \"react\"\nimport { SPageContainer } from \"./styled\"\n\nconst PageContainer = () => (\n  <SPageContainer>\n  </SPageContainer>\n)\n\nexport default PageContainer","import GlobalStyle from \"../style/GlobalStyle\";\nimport Drawer from \"./Drawer/Drawer\";\nimport Main from \"./Main/Main\";\nimport PageContainer from \"./PageContainer/PageContainer\";\n\nfunction App() {\n  return (\n    <>\n    <GlobalStyle/>\n    <Main>\n      <Drawer/>\n      <PageContainer/>\n    </Main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}